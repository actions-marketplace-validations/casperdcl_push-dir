name: Push Dir
author: Casper da Costa-Luis
description: Cleanly push directory contents to a branch
inputs:
  message:
    description: Commit message
    required: true
  branch:
    description: Branch to push to
    required: true
  name:
    description: Git committer name
    default: github-actions[bot]
    required: false
  email:
    description: Git committer email
    default: 41898282+github-actions[bot]@users.noreply.github.com
    required: false
  dir:
    description: Directory to push
    default: .
    required: false
  force:
    description: Set to "true" to force push
    required: false
  history:
    description: |
      Set to "false" to discard any prior commits on the `branch`
      (Note: "false" will override `force` to "true")
    default: true
    required: false
  cname:
    description: Text to inject into a `CNAME` file
    default: ''
    required: false
  nojekyll:
    description: Set to "true" to add a `.nojekyll` file
    required: false
branding:
  icon: upload-cloud
  color: black
runs:
  using: composite
  steps:
  - name: Push Branch
    run: |
      abspath(){
        echo "$(cd "$1" && pwd)"
      }

      DOT_GIT_DIR="$(git -C "$INPUT_DIR" rev-parse --git-dir)"
      if [[ ! -f "$DOT_GIT_DIR"/config && -d "$DOT_GIT_DIR"/.git ]]; then
        # incorrectly configured GIT_DIR
        DOT_GIT_DIR="$DOT_GIT_DIR"/.git
      fi
      DOT_GIT_DIR="$(abspath "$DOT_GIT_DIR")"

      TEMP_DIR="$(mktemp -d 2>/dev/null || mktemp -d -t tempdir)"
      cp -rT "${INPUT_DIR%%+(/)}" "${TEMP_DIR%%+(/)}"
      rm -rf "$TEMP_DIR"/.git

      TEMP_REPO="$(mktemp -d 2>/dev/null || mktemp -d -t temprepo)"
      pushd "$TEMP_REPO"

      git init
      git config user.name "$INPUT_NAME"
      git config user.email "$INPUT_EMAIL"
      git remote add local file://"$DOT_GIT_DIR"
      if [[ "$INPUT_HISTORY" == true ]]; then
        git -C "$DOT_GIT_DIR" fetch origin "$INPUT_BRANCH":"$INPUT_BRANCH" \
        && git fetch local "$INPUT_BRANCH":"$INPUT_BRANCH" \
        && git checkout "$INPUT_BRANCH" || :
        git ls-files -z | xargs -0 git rm
      fi
      git branch -M "$INPUT_BRANCH"

      cp -rT "${TEMP_DIR%%+(/)}" "${TEMP_REPO%%+(/)}"
      rm -rf "$TEMP_DIR"

      if [[ -n "$INPUT_CNAME" ]]; then
        echo "$INPUT_CNAME" > CNAME
      fi
      if [[ "$INPUT_NOJEKYLL" == true ]]; then
        touch .nojekyll
      fi

      git add . && git commit -m "${INPUT_MESSAGE}" || :
      git push --force local "$INPUT_BRANCH":"$INPUT_BRANCH"

      popd
      rm -rf "$TEMP_REPO"

      if [[ "$INPUT_FORCE" == true || "$INPUT_HISTORY" == false ]]; then
        git -C "$DOT_GIT_DIR" push --force origin "$INPUT_BRANCH":"$INPUT_BRANCH"
      else
        git -C "$DOT_GIT_DIR" push origin "$INPUT_BRANCH":"$INPUT_BRANCH"
      fi
    shell: bash
    env:
      INPUT_DIR: ${{ inputs.dir }}
      INPUT_NAME: ${{ inputs.name }}
      INPUT_EMAIL: ${{ inputs.email }}
      INPUT_HISTORY: ${{ inputs.history }}
      INPUT_BRANCH: ${{ inputs.branch }}
      INPUT_CNAME: ${{ inputs.cname }}
      INPUT_NOJEKYLL: ${{ inputs.nojekyll }}
      INPUT_MESSAGE: ${{ inputs.message }}
      INPUT_FORCE: ${{ inputs.force }}
